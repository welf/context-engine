# Cargo deny configuration for Context Engine
# Ensures security, license compliance, and dependency management

[graph]
targets = [
    "x86_64-unknown-linux-gnu",
    "aarch64-unknown-linux-gnu",
    "x86_64-unknown-linux-musl",
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "x86_64-pc-windows-msvc",
]
all-features = true

[advisories]
unmaintained = "workspace"
yanked = "deny"
ignore = [
    # Add specific advisory IDs to ignore (with justification)
    # Example: "RUSTSEC-2020-0001", # False positive for our use case
]

[licenses]
confidence-threshold = 0.8
allow = [
    "0BSD",
    "Apache-2.0 WITH LLVM-exception",
    "Apache-2.0",
    "BSD-2-Clause",
    "BSD-2-Clause-Patent",
    "BSD-3-Clause",
    "BSL-1.0",
    "CC0-1.0",
    "ISC",
    "LicenseRef-ring",
    "MIT",
    "OpenSSL",
    "Unicode-3.0",
    "Unicode-DFS-2016",
    "Unlicense",
    "Zlib",
]

[[licenses.clarify]]
name = "ring"
expression = "MIT AND ISC AND OpenSSL"
license-files = [
    { path = "LICENSE", hash = 0xbd0eed23 }
]

[bans]
multiple-versions = "warn"
wildcards = "warn"
highlight = "all"
workspace-default-features = "allow"
external-default-features = "allow"

deny = [
    { crate = "git2", use-instead = "gix" },
    { crate = "openssl", use-instead = "rustls" },
    { crate = "openssl-sys", use-instead = "rustls" },
    "libssh2-sys",
    { crate = "cmake", use-instead = "cc" },
    { crate = "windows", reason = "bloated and unnecessary", use-instead = "ideally inline bindings, practically, windows-sys" },
]

skip = [
    # Allow multiple versions during development
    # { name = "example-crate", version = "0.1.0" },
]

skip-tree = [
    # Skip entire dependency trees if needed
    # { name = "example-crate", version = "0.1.0" },
]

[sources]
unknown-registry = "deny"
unknown-git = "deny"
